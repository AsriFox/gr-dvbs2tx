/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(dvbs2_config.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(bd48e0d1ad948dfa8b54bbe48a44940e)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <dvbs2/dvbs2_config.h>
// pydoc.h is automatically generated in the build directory
#include <dvbs2_config_pydoc.h>

void bind_dvbs2_config(py::module& m)
{


    py::enum_<::gr::dvbs2::dvbs2_code_rate_t>(m,"dvbs2_code_rate_t")
        .value("C1_4", ::gr::dvbs2::C1_4) // 0
        .value("C1_3", ::gr::dvbs2::C1_3) // 1
        .value("C2_5", ::gr::dvbs2::C2_5) // 2
        .value("C1_2", ::gr::dvbs2::C1_2) // 3
        .value("C3_5", ::gr::dvbs2::C3_5) // 4
        .value("C2_3", ::gr::dvbs2::C2_3) // 5
        .value("C3_4", ::gr::dvbs2::C3_4) // 6
        .value("C4_5", ::gr::dvbs2::C4_5) // 7
        .value("C5_6", ::gr::dvbs2::C5_6) // 8
        .value("C8_9", ::gr::dvbs2::C8_9) // 9
        .value("C9_10", ::gr::dvbs2::C9_10) // 10
        .value("C13_45", ::gr::dvbs2::C13_45) // 11
        .value("C9_20", ::gr::dvbs2::C9_20) // 12
        .value("C90_180", ::gr::dvbs2::C90_180) // 13
        .value("C96_180", ::gr::dvbs2::C96_180) // 14
        .value("C11_20", ::gr::dvbs2::C11_20) // 15
        .value("C100_180", ::gr::dvbs2::C100_180) // 16
        .value("C104_180", ::gr::dvbs2::C104_180) // 17
        .value("C26_45", ::gr::dvbs2::C26_45) // 18
        .value("C18_30", ::gr::dvbs2::C18_30) // 19
        .value("C28_45", ::gr::dvbs2::C28_45) // 20
        .value("C23_36", ::gr::dvbs2::C23_36) // 21
        .value("C116_180", ::gr::dvbs2::C116_180) // 22
        .value("C20_30", ::gr::dvbs2::C20_30) // 23
        .value("C124_180", ::gr::dvbs2::C124_180) // 24
        .value("C25_36", ::gr::dvbs2::C25_36) // 25
        .value("C128_180", ::gr::dvbs2::C128_180) // 26
        .value("C13_18", ::gr::dvbs2::C13_18) // 27
        .value("C132_180", ::gr::dvbs2::C132_180) // 28
        .value("C22_30", ::gr::dvbs2::C22_30) // 29
        .value("C135_180", ::gr::dvbs2::C135_180) // 30
        .value("C140_180", ::gr::dvbs2::C140_180) // 31
        .value("C7_9", ::gr::dvbs2::C7_9) // 32
        .value("C154_180", ::gr::dvbs2::C154_180) // 33
        .value("C11_45", ::gr::dvbs2::C11_45) // 34
        .value("C4_15", ::gr::dvbs2::C4_15) // 35
        .value("C14_45", ::gr::dvbs2::C14_45) // 36
        .value("C7_15", ::gr::dvbs2::C7_15) // 37
        .value("C8_15", ::gr::dvbs2::C8_15) // 38
        .value("C32_45", ::gr::dvbs2::C32_45) // 39
        .value("C2_9_VLSNR", ::gr::dvbs2::C2_9_VLSNR) // 40
        .value("C1_5_MEDIUM", ::gr::dvbs2::C1_5_MEDIUM) // 41
        .value("C11_45_MEDIUM", ::gr::dvbs2::C11_45_MEDIUM) // 42
        .value("C1_3_MEDIUM", ::gr::dvbs2::C1_3_MEDIUM) // 43
        .value("C1_5_VLSNR_SF2", ::gr::dvbs2::C1_5_VLSNR_SF2) // 44
        .value("C11_45_VLSNR_SF2", ::gr::dvbs2::C11_45_VLSNR_SF2) // 45
        .value("C1_5_VLSNR", ::gr::dvbs2::C1_5_VLSNR) // 46
        .value("C4_15_VLSNR", ::gr::dvbs2::C4_15_VLSNR) // 47
        .value("C1_3_VLSNR", ::gr::dvbs2::C1_3_VLSNR) // 48
        .value("C_OTHER", ::gr::dvbs2::C_OTHER) // 49
        .export_values()
    ;
    py::enum_<::gr::dvbs2::dvbs2_rolloff_factor_t>(m,"dvbs2_rolloff_factor_t")
        .value("RO_0_35", ::gr::dvbs2::RO_0_35) // 0
        .value("RO_0_25", ::gr::dvbs2::RO_0_25) // 1
        .value("RO_0_20", ::gr::dvbs2::RO_0_20) // 2
        .value("RO_RESERVED", ::gr::dvbs2::RO_RESERVED) // 3
        .value("RO_0_15", ::gr::dvbs2::RO_0_15) // 4
        .value("RO_0_10", ::gr::dvbs2::RO_0_10) // 5
        .value("RO_0_05", ::gr::dvbs2::RO_0_05) // 6
        .export_values()
    ;
    py::enum_<::gr::dvbs2::dvbs2_constellation_t>(m,"dvbs2_constellation_t")
        .value("MOD_QPSK", ::gr::dvbs2::MOD_QPSK) // 0
        .value("MOD_8PSK", ::gr::dvbs2::MOD_8PSK) // 1
        .value("MOD_8APSK", ::gr::dvbs2::MOD_8APSK) // 2
        .value("MOD_16APSK", ::gr::dvbs2::MOD_16APSK) // 3
        .value("MOD_8_8APSK", ::gr::dvbs2::MOD_8_8APSK) // 4
        .value("MOD_32APSK", ::gr::dvbs2::MOD_32APSK) // 5
        .value("MOD_4_12_16APSK", ::gr::dvbs2::MOD_4_12_16APSK) // 6
        .value("MOD_4_8_4_16APSK", ::gr::dvbs2::MOD_4_8_4_16APSK) // 7
        .value("MOD_BPSK", ::gr::dvbs2::MOD_BPSK) // 8
        .value("MOD_BPSK_SF2", ::gr::dvbs2::MOD_BPSK_SF2) // 9
        .value("MOD_OTHER", ::gr::dvbs2::MOD_OTHER) // 10
        .export_values()
    ;
    py::enum_<::gr::dvbs2::dvbs2_pilots_t>(m,"dvbs2_pilots_t")
        .value("PILOTS_OFF", ::gr::dvbs2::PILOTS_OFF) // 0
        .value("PILOTS_ON", ::gr::dvbs2::PILOTS_ON) // 1
        .export_values()
    ;
    py::enum_<::gr::dvbs2::dvbs2_framesize_t>(m,"dvbs2_framesize_t")
        .value("FECFRAME_NORMAL", ::gr::dvbs2::FECFRAME_NORMAL) // 0
        .value("FECFRAME_SHORT", ::gr::dvbs2::FECFRAME_SHORT) // 1
        .value("FECFRAME_MEDIUM", ::gr::dvbs2::FECFRAME_MEDIUM) // 2
        .export_values()
    ;
    py::enum_<::gr::dvbs2::dvbs2_ping_reply_t>(m,"dvbs2_ping_reply_t")
        .value("PING_REPLY_OFF", ::gr::dvbs2::PING_REPLY_OFF) // 0
        .value("PING_REPLY_ON", ::gr::dvbs2::PING_REPLY_ON) // 1
        .export_values()
    ;
    py::enum_<::gr::dvbs2::dvbs2_ipaddr_spoof_t>(m,"dvbs2_ipaddr_spoof_t")
        .value("IPADDR_SPOOF_OFF", ::gr::dvbs2::IPADDR_SPOOF_OFF) // 0
        .value("IPADDR_SPOOF_ON", ::gr::dvbs2::IPADDR_SPOOF_ON) // 1
        .export_values()
    ;
    py::enum_<::gr::dvbs2::dvbs2_dummy_frames_t>(m,"dvbs2_dummy_frames_t")
        .value("DUMMY_FRAMES_OFF", ::gr::dvbs2::DUMMY_FRAMES_OFF) // 0
        .value("DUMMY_FRAMES_ON", ::gr::dvbs2::DUMMY_FRAMES_ON) // 1
        .export_values()
    ;



}







